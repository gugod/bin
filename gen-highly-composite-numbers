#!/usr/bin/env perl6

sub num-of-divisors(Int $n) {
    return 2 if $n.is-prime;
    return 2 + (2..Int($n/2)).race.grep(-> $x { $n % $x == 0 }).elems;
}

my $current_max = 0;

for (2..*).hyper.map(-> $n { $n => num-of-divisors($n) }).values -> $it {
    my ($n, $divisors) = $it.kv;
    if $divisors > $current_max {
        $current_max = $divisors ;
        say $n;
    }
}
