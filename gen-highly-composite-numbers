#!/usr/bin/env raku

sub num-of-divisors(Int $n) {
    return (1...$n.sqrt().floor()).grep({ $n % $^x == 0 }).elems * 2;
}

my $current_max = 0;

for (2..*).map(-> $n { $n => num-of-divisors($n) }).values -> $it {
    my ($n, $divisors) = $it.kv;
    if $divisors > $current_max {
        $current_max = $divisors ;
        say "$n, with $divisors divisors";
    }
}
