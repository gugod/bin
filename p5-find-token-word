#!/usr/bin/env perl
use v5.18;

use PPI;
use PPI::Document;
use File::Next;

use Getopt::Long;

sub is_perl {
    my ($file) = @_;

    return 1 if $file =~ / \.(?: t|p[ml]|pod|comp ) $/xi;
    return 0 if $file =~ / \. /xi;

    if (open my $fh, '<', $file) {
        my $line = <$fh>;
        return 1 if $line =~ m{^#!.*perl};
    }

    return 0;
}

my $word = shift(@ARGV);

for (@ARGV) {
    my $files = File::Next::files($_);
    while ( defined ( my $file = $files->() ) ) {
        next unless is_perl($file);

        my %hits;
        my $doc = PPI::Document->new($file) or next;
        $doc->index_locations;

        my $tokens = $doc->find(
            sub {
                my $op = $_[1];
                return ($op->isa("PPI::Token::Word") && $op->content eq $word)
            }
        ) or next;

        for (my $i = 0; $i < @$tokens; $i++) {
            my $op = $tokens->[$i];
            my $ln = $op->line_number;
            $hits{$ln} = 1;
        }

        if (%hits) {
            my $line_number = 0;
            open my $fh, "<", $file;
            while(my $line = <$fh>) {
                $line_number++;
                if ($hits{$line_number}) {
                    print "${file}:${line_number}:${line}";
                }
            }
            close($fh);
        }
    }
}
